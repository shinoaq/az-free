{"version":3,"sources":["panels/Home.js","App.js","index.js"],"names":["App","props","state","data","handleChange","bind","handleSubmit","axios","get","then","res","ban_post","ban_comment","console","log","setState","warns","bans","post_delay","comment_delay","event","nam","target","name","val","value","checked","this","preventDefault","activePanel","id","header","mode","onSubmit","disabled","after","onChange","top","type","style","display","size","stretched","React","Component","useState","setActivePanel","fetchedUser","setUser","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","Home","go","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7419acf2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar, Switch, InfoRow, InfoRowProps, SimpleCell, FormItem, Input, View } from '@vkontakte/vkui';\n\nclass App extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { data: [] };\n\t\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t  }\n\n\tcomponentDidMount() {\n\t\taxios.get('https://bot.shinoa.tech/az_free/stats.php?settings')\n\t\t.then(res => {\n\t\t\tres.data.ban_post = (res.data.ban_post === 't');\n\t\t\tres.data.ban_comment = (res.data.ban_comment === 't');\n\t\t\tconst data = res.data;\n\t\t\tconsole.log(res);\n\t\t\tthis.setState({ warns : res.data.warns, bans: res.data.bans, ban_post : res.data.ban_post, ban_comment : res.data.ban_comment, post_delay : res.data.post_delay, comment_delay : res.data.comment_delay });\n\t\t})\n\t  }\n\t\n\t  handleChange(event) {\n\t\tlet nam = event.target.name;\n\t\tlet val = event.target.value;\n\t\tif (nam === 'ban_comment' || nam === 'ban_post') {\n\t\t\tval = event.target.checked;\n\t\t}\n\t\tthis.setState({[nam]: val});\n\t  }\n\t\n\t  handleSubmit(event) {\n\t\taxios.get('https://bot.shinoa.tech/az_free/stats.php?ban_post='+this.state.ban_post+'&ban_comment='+this.state.ban_comment+'&post_delay='+this.state.post_delay+'&comment_delay='+this.state.comment_delay)\n\t\tevent.preventDefault();\n\t  }\n\n    render() {\n        return (\n\t\t\t<View activePanel=\"main\">\n\t\t\t\t<Panel id=\"main\">\n\t\t\t\t\t<PanelHeader>Настройка бота</PanelHeader>\n\n\t\t\t\t\t<Group header={<Header mode=\"secondary\">Info</Header>}>\n\t\t\t        \t<SimpleCell>\n\t\t\t          \t\t<InfoRow header=\"Выдано предупреждений:\">\n\t\t\t\t\t\t\t  { this.state.warns }\n\t\t\t          \t\t</InfoRow>\t\n\t\t\t\t\t\t\t  <InfoRow header=\"Выдано блокировок:\">\n\t\t\t\t\t\t\t  { this.state.bans }\n\t\t\t          \t\t</InfoRow>\n\t\t\t        \t</SimpleCell>\n\t\t\t      \t</Group>\n\t\t\t\t\t<Group header={<Header mode=\"secondary\">Settings</Header>}>\n\t\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t        \t<Cell disabled after={<Switch name=\"ban_post\" checked = { this.state.ban_post } onChange={this.handleChange}/>}>\n\t\t\t\t\t\t\tБлокировать за посты\n\t\t\t        \t</Cell>\n\t\t\t        \t<Cell disabled after={<Switch name=\"ban_comment\" checked = { this.state.ban_comment } onChange={this.handleChange}/>}>\n\t\t\t          \t\tБлокировать за комментарии\n\t\t\t        \t</Cell>\n\t\t\t\t\t\t<FormItem top=\"Задержка между созданием постов\">\n\t\t\t        \t\t<Input type=\"number\" name=\"post_delay\" value= { this.state.post_delay } onChange={this.handleChange}/>\n\t\t\t      \t\t</FormItem>\n\t\t\t\t\t\t  <FormItem top=\"Задержка между созданием комментариев\">\n\t\t\t        \t\t<Input type=\"number\" name=\"comment_delay\" value = { this.state.comment_delay } onChange={this.handleChange}/>\n\t\t\t      \t\t</FormItem>\n\t\t\t\t\t\t<Div style={{display: 'flex'}}>\n\t\t\t       \t\t\t<Button size=\"l\" type=\"submit\" stretched>Сохранить</Button>\n\t\t\t     \t\t</Div>\n\t\t\t\t\t\t </form>\n\t\t\t      \t</Group>\n\n\t\t\t\t</Panel>\n\t\t\t</View>\n        );\n    }\n}\n\nexport default App;","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t\t</View>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}